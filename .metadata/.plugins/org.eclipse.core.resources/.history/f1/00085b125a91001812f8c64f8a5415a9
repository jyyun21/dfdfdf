package adapter;

import java.util.HashMap;

import kr.co.ldcc.lemp.adapter.AbstractTemplateAdapter;
import kr.co.ldcc.lemp.adapter.DBAdapter;
import kr.co.ldcc.lemp.hybrid.adapter.api.Adapter;
import kr.co.ldcc.lemp.hybrid.adapter.api.IAdapterJob;
import kr.co.ldcc.lemp.hybrid.common.server.JsonAdaptorObject;
import model.DM0001.DM0001Request;
import model.DM0001.DM0001Request_Body;
import model.header.DMheader;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;

import data.UserDomain;

@Adapter(trcode = { "DM0001" })  //trcode는 전문코드, 요청데이터랑 전문코드 둘다 서버로 보냄
public class DM0001_Adapter extends AbstractTemplateAdapter implements
		IAdapterJob {

	private static final Logger logger = LoggerFactory
			.getLogger(DM0001_Adapter.class);
	@Autowired
	private DBAdapter dbAdapter; //spring bean으로 동작, 바로 객체를 얻어옴

	public JsonAdaptorObject onProcess(JsonAdaptorObject obj) {

		DM0001Request request = new DM0001Request(obj);
		DMheader header = request.getHeader();
		DM0001Request_Body reqBody = request.getBody();

		//Start Business Logic Coding!
		try {
			String userId = reqBody.getUserId();
			String password = reqBody.getPassword();
			HashMap<String, Object> hashMap = new HashMap<String, Object>();
			hashMap.put("userId", userId);
			hashMap.put("password", password);
			
			UserDomain userDomain=  (UserDomain) dbAdapter.selectOne("LegacyDB", "DM0001.1001", hashMap);
			
			
			return null;
		} catch (Exception e) {

			return null;
		}
	}

}
