/**
 * SampleDownloader.java
 * Copyright 2010, MOBILE C&C LTD. All rights reserved.
 */
package download;

import java.io.ByteArrayInputStream;
import java.io.File;
import java.io.IOException;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import kr.co.ldcc.lemp.common.Smart;
import kr.co.ldcc.lemp.downloader.Attachment;
import kr.co.ldcc.lemp.downloader.LocalFileDownloader;
import kr.co.ldcc.lemp.downloader.URLDownloader;
import kr.co.ldcc.lemp.hybrid.server.web.control.DownloadController;
import kr.co.ldcc.lemp.hybrid.server.web.io.AbstractDownloader;
import kr.co.ldcc.lemp.hybrid.server.web.io.Downloader;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Component;



/**
 * 샘플 다운로드. http://{context_root}/download/my 로 매핑된다.
 * @author 
 */
@Component
public class MyDownloader extends AbstractDownloader implements Downloader {
    private Logger logger = LoggerFactory.getLogger(MyDownloader.class);
    
    public MyDownloader() {
        // set buffer size 16kb of memory
        super(DownloadController.BUFFER_SIZE * 2);
    }
    
    /**
     * {@inheritDoc}
     * @param target {@inheritDoc}
     * @param uid {@inheritDoc}
     * @param params {@inheritDoc}
     * @throws Exception {@inheritDoc}
     */
    public void download(String target, String uid, Map<String, Object> params) throws Exception {
        logger.info(String.format("========Start downloading from %s : %s ", target, uid));

        int fileStartPos = Integer.parseInt(params.get("index").toString());
        HttpServletRequest request = (HttpServletRequest)params.get("HttpServletRequest");
        HttpServletResponse response = (HttpServletResponse)params.get("HttpServletResponse");
        String fileName = request.getParameter("fileName");
        
        String fileType = getMimeType(request, fileName);
        ByteArrayInputStream is = null;
        try {
        	String fileURL = Smart.getCustomHome() + File.separator + "datafiles";
        	LocalFileDownloader downloader = new LocalFileDownloader();
        	Attachment attach = downloader.download(fileName, fileURL);
        	
        	if(attach == null){
        		response.sendError(HttpServletResponse.SC_NOT_FOUND, "파일이 없습니다");
        		
        	}
        	is = new ByteArrayInputStream(attach.getBytes());
        	
        	send(response, fileName, fileType, is, attach.getSize(), fileStartPos);
        	
		} catch (Exception e) {
			e.printStackTrace();
			response.sendError(HttpServletResponse.SC_NOT_FOUND, "에러 발생");
		} finally{
			if(is != null){
				
			}
		}
        int mode = 0;
        
        
        logger.info("Sucess downloading from " + target + "=============");
    }
}
